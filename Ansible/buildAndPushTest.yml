---
- hosts: all
  become: true

  tasks:
      - name: check docker install
        yum:
            name: docker
            state: present

      - name: Check Docker service status
        ansible.builtin.service:
            name: docker
            state: started

- hosts: mariadb
  gather_facts: true
  tasks:
      - name: check for running database
        shell: docker ps -aq --filter "name=rmit-store-db"
        ignore_errors: true
        register: db_results

      - name: register result to use on other hosts
        set_fact:
            db_status: "{{ 0 if db_results.stdout else -1 }}"
        delegate_to: "{{ inventory_hostname }}"

- hosts: ansibleserver
  become: true
  gather_facts: true

  tasks:
      - name: Delete images on control node
        shell: if [[ $(docker images -qa) ]]; then docker rmi -f $(docker images -qa); fi
        ignore_errors: true

      - name: move webapp dockerfile
        shell: cp /home/ansibleadmin/DockerFiles/PHP/test/Dockerfile /home/ansibleadmin/webapp/

      - name: move webapp dockerfile
        shell: cp /home/ansibleadmin/UnitTest/tests.php /home/ansibleadmin/UnitTest/functions.php /home/ansibleadmin/webapp/

      - name: build and push docker test webap image to docker hub
        community.docker.docker_image:
            name: rmit-store-test
            build:
                path: /home/ansibleadmin/webapp
                pull: true
            tag: latest
            force_tag: true
            state: present
            repository: vvd0502/rmit-store-test
            push: yes
            source: build

      - name: check db status
        debug:
            msg: "db_status on dbserver is {{ hostvars[item]['db_status'] }}"
        with_items: "{{ groups['dbserver'] }}"

      - name: register new value for db status
        shell: echo "{{ hostvars[item]['db_status'] }}";
        with_items: "{{ groups['dbserver'] }}"
        register: db_status

      - name: check my new status
        debug:
            msg: "db_status on dbserver is {{db_status.results[0].stdout}}"

      - name: Copy db dockerfile
        shell: cp /home/ansibleadmin/DockerFiles/DB/Dockerfile /home/ansibleadmin/webapp/
        when: "db_status.results[0].stdout != '0'"

      - name: build and push docker test image to docker hub
        community.docker.docker_image:
            name: rmit-store-db
            build:
                path: /home/ansibleadmin/webapp
                pull: true
            state: present
            tag: latest
            force_tag: true
            repository: vvd0502/rmit-store-db
            push: yes
            source: build
        when: "db_status.results[0].stdout != '0'"
